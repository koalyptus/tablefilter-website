---
title: Selectable grid
heading: 'Selectable grid'
section: 'examples-extension'
---
<link rel="stylesheet" type="text/css" href="tablefilter/style/tablefilter.css">
<h1>{{ heading }}</h1>

<p>
    To enable the selection capabilities, import the {{{site.ezedittable_link}}}
    plugin, enable the <code>selection</code> property and configure the
    <code>advancedGrid</code> using the {{{site.ezedittable_link}}} options.
</p>

<p>

</p>
<div class="alert alert-info" role="alert">
    <p>
        Instructions: Double-click on a row on or press <code>enter</code> key to
        perform action. Enable multiple rows selection by checking the <b>Multiple
        selection</b> checkbox. Keep <code>Ctrl/Cmd</code> or <code>Shift</code> key
        pressed to select multiple rows.
    </p>
</div>


<div data-config>
    <div class="ezCommandEditor">
        <input onclick="var ezEditTable = tf.extension('advancedGrid')._ezEditTable;
            if(this.checked){
                ezEditTable.selectionModel = 'multiple';
            } else {
                ezEditTable.selectionModel = 'single';
            }" name="chkMultipleSlc" id="chkMultipleSlc" type="checkbox">
        <label for="chkMultipleSlc">Multiple selection</label>
    </div>
</div>
{{> countries-table }}

<p></p>
<div data-config>
    <div class="ezCommandEditor">
        <button onclick="alert( tf.extension('advancedGrid')._ezEditTable.Selection.GetActiveRowValues() );">Active row data</button>
        <button onclick="alert( tf.extension('advancedGrid')._ezEditTable.Selection.GetSelectedValues() );">Selected rows data</button>
        <button onclick="tf.extension('advancedGrid')._ezEditTable.Selection.ClearSelections();">Clear Selection</button>
    </div>
</div>

<div class="alert alert-warning" role="alert">
    <code>TableFilter</code> imports the required stylesheets dynamically.
    However, if you use <code>grid_layout</code>, it is recommended to
    import the main stylesheet in your page: <br>
    <code>
&lt;link rel="stylesheet" type="text/css" href="{your path to tablefilter}/style/tablefilter.css" /&gt;
    </code>
</div>

{{> tablefilter-script }}

<script data-config>
    var filtersConfig = {
        base_path: 'tablefilter/',
        grid_layout: true,
        alternate_rows: true,
        btn_reset: true,
        rows_counter: true,
        loader: true,
        status_bar: true,
        col_1: 'select',
        col_2: 'select',
        col_types: [
            'string', 'string', 'number',
            'number', 'number', 'number',
            'number', 'number', 'number'
        ],
        col_widths: [
            '150px', '70px', '70px',
            '120px', '120px', '100px',
            '100px', '100px', '100px'
        ],
        extensions: [
            {
                name: 'advancedGrid',
                // For the purpose of this demo, ezEditTable dependency
                // is loaded from its own website which is not a CDN.
                // This dependency also requires a licence therefore
                // DO NOT import it in this way in your projects.
                filename: 'ezEditTable_min.js',
                vendor_path: 'http://edittable.free.fr/ezEditTable/',
                // Once ezEditTable dependency is installed in your
                // project import it by pointing to a local path:
                // vendor_path: 'path/to/ezEditTable'

                // Below ezEditTable options for activating:
                // - row(s)/cell(s) selection
                selection: true,
                default_selection: 'both',
                on_validate_row: function(o, row){
                    var country = o.Selection.GetActiveRowValues()[0];
                    alert('Chosen record: ' + country);
                }
            }, {
                name: 'sort'
            }
        ]
    };

    var tf = new TableFilter('demo', filtersConfig);
    tf.init();
</script>

{{> code-tabs }}
