---
title: External filters generation
heading: 'External filters generation'
section: 'examples-api'
---

<h1>{{ heading }}</h1>
<p>
    <code>TableFilter</code> can also generate the filters in the desired
    elements of your page.
</p>

<div data-config>
  <div id="extGrid" class="panel panel-info pull-left">
      <div class="panel-heading">Filters</div>

      <div class="panel-body bg-info">
          <label>Choose Country:</label><br>
          <span id="slcCountry"></span><br>

          <span>Keep Ctrl/Cmd key pressed for multiple selections</span><br><br>
          <label>Choose Country code:</label><br>
          <span id="slcCode"></span><br><br>

          <label>Choose year:</label><br>
          <span id="slcYear"></span><br><br>

          <label for="inpPop">POP:</label><br>
          <span id="inpPop"></span><br><br>

          <form id="frmRadioInps" name="frmRadioInps">
              <label for="rdoXRat">XRAT:</label><br>
              <input type="checkbox" id="rdoXRat" name="rdoXRat" value="!NA"
                  onclick="
                      if(this.checked){
                          tf.setFilterValue(4, this.value);
                      } else tf.setFilterValue(4, '');
                      tf.filter();"  >Not NA

              <br><br>

              <label for="chkCI">CI:</label><br>
              <input type="radio" id="chkCI" name="chkCI" value=">0 && <=10"
                  onclick="
                      if(this.checked){
                          tf.setFilterValue(8, this.value);
                          tf.filter();
                      }" > 0 - 10
              <input type="radio" id="chkCI" name="chkCI" value=">10 && <=20"
                  onclick="
                      if(this.checked){
                          tf.setFilterValue(8, this.value);
                          tf.filter();
                      }" > 10 - 20
              <input type="radio" id="chkCI" name="chkCI" value=">20 && <=30"
                  onclick="
                      if(this.checked){
                          tf.setFilterValue(8, this.value);
                          tf.filter();
                      }" > 20 - 30
          </form>
      </div>
      <div class="panel-footer">
          <input id="btnFlt" value="Filter" type="button"
            class="btn btn-default" onclick="tf.filter();" >&nbsp;
          <input id="btnClr" value="Clear" type="button" class="btn btn-link"
              onclick="tf.clearFilters();
                  //clears radio btns
                  for(var o=frmRadioInps.elements, p=o.length - 1; p > -1; p--){
                      if (o[p].type){
                          o[p].checked = false;
                      }
                  }
              " >
          <div id="statusDiv" class="pull-right"></div>
      </div>
  </div>
</div>

<div class="pull-left" style="margin-left: 0.5em;">
    {{> countries-table-tiny }}
</div>

{{> tablefilter-script }}

<script data-config>
    var tfConfig = {
        base_path: 'tablefilter/',
        col_0: 'multiple',
        col_1: 'select',
        col_2: 'checklist',
        col_4: 'none',
        col_8: 'none',
        alternate_rows: true,
        mark_active_columns: true,
        rows_counter: {
            text: 'Displayed rows: '
        },
        loader: true,
        status_bar: {
          target_id: 'statusDiv',
        },
        col_types: [
            'string', 'string', 'number',
            'number', 'number', 'number',
            'number', 'number', 'number'
        ],
        clear_filter_text: [
          ' [ Show all ] ',
          '<Clear>',
          'Clear filter'
        ],

        /* external filters */
        external_flt_ids: [
            'slcCountry',
            'slcCode',
            'slcYear',
            'inpPop'
        ],

        /* sorting feature */
        extensions: [{ name: 'sort' }]
    };
    var tf = new TableFilter('demo', tfConfig);
    tf.init();
</script>

<p class="clearfix"></p>

{{> code-tabs }}

<div class="alert alert-warning" role="alert">
    NOTE: the filters panel on the left is designed using Bootstrap's
    panel classes.
</div>
