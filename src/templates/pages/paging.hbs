---
title: Paging
heading: 'Paging'
section: 'examples'
---

<h1>{{ heading }}</h1>

<p>
    Large tabular data can be easily paged with the <code>paging</code> option.
</p>

{{> countries-table }}

{{> tablefilter-script }}

<script data-config>
    var filtersConfig = {
        base_path: 'tablefilter/',
        paging: {
          results_per_page: ['Records: ', [10, 25, 50, 100]]
        },
        state: {
          types: ['local_storage'],
          filters: true,
          page_number: true,
          page_length: true,
          sort: true
        },
        alternate_rows: true,
        btn_reset: true,
        rows_counter: true,
        loader: {
          html: '<div id="lblMsg"></div>',
          css_class: 'myLoader'
        },
        status_bar: {
          target_id: 'lblMsg',
          css_class: 'myStatus'
        },
        col_0: 'select',
        col_1: 'select',
        col_2: 'select',
        col_types: [
            'string', 'string', 'number',
            'number', 'number', 'number',
            'number', 'number', 'number'
        ],
        extensions:[{
            name: 'sort'
        }]
    };
    var tf = new TableFilter('demo', filtersConfig);
    tf.init();
</script>

<p></p>

<style type="text/css" data-config>
    /**
     * Custom CSS definitions as per TableFilter configuration
     */
    .myLoader{
        position:absolute; padding: 5px;
        margin:100px 0 0 5%; width:auto;
        z-index:1000; font-size:12px; font-weight:bold;
        border:1px solid #666; background:#ffffcc;
        vertical-align:middle;
    }
    .myStatus{
        width:auto; display:block;
    }
</style>

{{> code-tabs }}
