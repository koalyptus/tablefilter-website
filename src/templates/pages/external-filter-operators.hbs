---
title: External filter operators
heading: 'External filter operators'
section: 'examples-api'
---
<link rel="stylesheet" type="text/css" href="tablefilter/style/tablefilter.css">

<h1>{{ heading }}</h1>

<p>
    This example shows how to take advantage of the filter operators to
    implement an advanced search feature.
</p>

<div class="navbar navbar-default" data-config>
    <form class="navbar-form navbar-left" onsubmit="filter(event);">
        <div class="form-group">
            <label for="slcColumns">Search:</label>
            <select id="slcColumns" name="slcColumns" class="form-control">
                <option value="0">Country</option>
                <option value="1">ISO</option>
                <option value="2">Year</option>
                <option value="3">POP</option>
                <option value="4">XRAT</option>
                <option value="5">PPP</option>
                <option value="6">cgdp</option>
                <option value="7">cc</option>
                <option value="8">ci</option>
            </select>

            <div class="input-group">
                <div class="input-group-btn">
                    <select id="slcOperators" name="slcOperators"
                        class="form-control">
                        <option value="*">Containing</option>
                        <option value="=">Exactly matching</option>
                        <option value="!">Excluding</option>
                        <option value="rgx:">Matching RegEx</option>
                        <option value="{">Starts with</option>
                        <option value="}">Ends with</option>
                        <option value="<">Less than</option>
                        <option value="<=">Less than or equal to</option>
                        <option value=">">Greater than</option>
                        <option value=">=">Greater than or equal to</option>
                        <option value="[empty]">Only empty</option>
                        <option value="[nonempty]">Only non-empty</option>
                    </select>
                </div>
                <input name="inpSearch" type="text"
                    class="form-control" placeholder="Search">
            </div>

            <button type="submit" class="btn btn-default">Filter</button>
            <button type="reset" class="btn btn-link"
                onclick="tf.clearFilters();">Clear</button>
        </div>
    </form>
</div>

{{> countries-table }}

<p> </p>
<div class="alert alert-info" role="alert">
    <p>NOTE: the operators themselves can be configured with the following
    properties:
    <code>regexp_operator, empty_operator, nonempty_operator, or_operator,
    and_operator, greater_operator, lower_operator, lower_equal_operator,
    greater_equal_operator, different_operator, like_operator, equal_operator,
    start_with_operator, end_with_operator</code>, ie:
    <code>
var tfConfig = {
    base_path: 'tablefilter/',
    different_operator: '<>'
};
    </code>
</div>

{{> tablefilter-script }}

<script data-config>
    // Form submission logic for filtering the table
    function filter(evt){
        var frm = document.forms[0];
        var slcCols = frm.slcColumns;
        var slcOperators = frm.slcOperators;
        var inp = frm.inpSearch;
        var query = frm.slcOperators.value + inp.value;

        // Set the column's filter value
        tf.setFilterValue(slcCols.value, query);

        // Filter the table
        tf.filter();

        // Prevent form submission
        evt.preventDefault();
    }

    var tf = new TableFilter(
        document.querySelector('.countries'),
        {
            base_path: 'tablefilter/',
            mark_active_columns: true,
            alternate_rows: true,
            rows_counter: true,
            highlight_keywords: true,
            grid_layout: {
                width: '100%',
            },
            col_widths: [
                '120px','120px','120px',
                '120px','120px','120px',
                '120px','120px','120px'
            ],
            on_filters_loaded: function(o){
                // hide the filters row
                var gridLayout = o.feature('gridLayout');
                var headersTable = gridLayout.headTbl;
                headersTable.rows[o.getFiltersRowIndex()]
                    .style.display = 'none';
            }
        }
    );
    tf.init();
</script>

{{> code-tabs }}

<div class="alert alert-warning" role="alert">
    <p>ENHANCEMENT: Provide via a configuration property an easy way to hide the
    filters row.</p>
</div>
